# VeroctaAI Enterprise Docker Compose Configuration
version: '3.8'

services:
  api:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-verocta-production-secret-key-2024}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-verocta-jwt-secret-key-2024}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_PASSWORD=${SUPABASE_PASSWORD}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - CUSTOM_DOMAIN=${CUSTOM_DOMAIN}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-verocta}
      - POSTGRES_USER=${POSTGRES_USER:-verocta}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-verocta_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    depends_on:
      - api
    restart: unless-stopped

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api
    depends_on:
      - api
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
